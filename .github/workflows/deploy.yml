name: CI/CD for ERP App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DJANGO_SECRET_KEY: super-secret
  DEBUG: False
  ALLOWED_HOSTS: localhost,127.0.0.1
  POSTGRES_DB: erp_db
  POSTGRES_USER: erp_user
  POSTGRES_PASSWORD: erp_pass

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: 🧾 Checkout repo
      uses: actions/checkout@v3

    # ─────────────────────── BACKEND (Django) ───────────────────────
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 🐍 Install dependencies
      working-directory: ./backend
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: ⚙️ Run Django tests
      working-directory: ./backend
      run: |
        source venv/bin/activate
        python manage.py migrate
        python manage.py test

    # ─────────────────────── FRONTEND (Next.js) ───────────────────────
    - name: 🧰 Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: 📦 Install frontend dependencies
      working-directory: ./frontend
      run: npm install

    - name: 🛠️ Build frontend
      working-directory: ./frontend
      run: npm run build

    # ─────────────────────── DOCKER (Optional) ───────────────────────
    - name: 🔐 Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 🐳 Build and push backend Docker image
      working-directory: ./backend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/erp-backend:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/erp-backend:latest

    - name: 🐳 Build and push frontend Docker image
      working-directory: ./frontend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/erp-frontend:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/erp-frontend:latest

    # Optionnel : ajout d’un job de déploiement ici selon ton hébergeur
